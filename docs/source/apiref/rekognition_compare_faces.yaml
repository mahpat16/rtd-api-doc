swagger: '2.0'
info:
  title: Tiyaro
  version: '1.0'
host: api.tiyaro.ai
basePath: /
schemes:
  - https
paths:
  /model_specific_path:
    parameters:
      - description: 'Available service tiers: [cpuflex(default), gpuflex]'
        in: query
        name: serviceTier
        required: false
        type: string
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RekognitionCompareFacesParam'
      responses:
        '200':
          description: Success
          schema:
            properties:
              response:
                $ref: '#/definitions/RekognitionCompareFaceResponse'
            type: object
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Error:
    properties:
      code:
        type: integer
      message:
        type: string
    required:
      - code
      - message
    type: object
  ImageRef:
    properties:
      Bytes:
        description: Base64 encoded image. Only one of Bytes or URL should be specified
        type: string
      URL:
        description: URI of image. Only one of Bytes or URL should be specified
        type: string
    type: object
  RekognitionBoundingBox:
    properties:
      Height:
        type: number
      Left:
        type: number
      Top:
        type: number
      Width:
        type: number
    type: object
  RekognitionCompareFace:
    properties:
      BoundingBox:
        $ref: '#/definitions/RekognitionBoundingBox'
      Confidence:
        type: number
      Emotions:
        items:
          $ref: '#/definitions/RekognitionConfidenceValue'
        type: array
      Landmarks:
        items:
          $ref: '#/definitions/RekognitionLandmark'
        type: array
      Pose:
        $ref: '#/definitions/RekognitionPose'
      Quality:
        $ref: '#/definitions/RekognitionQuality'
      Smile:
        $ref: '#/definitions/RekognitionConfidenceValue'
    type: object
  RekognitionCompareFaceResponse:
    properties:
      FaceMatches:
        items:
          $ref: '#/definitions/RekognitionFaceMatch'
        type: array
      SourceImageFace:
        $ref: '#/definitions/RekognitionSourceImageFace'
      UnmatchedFaces:
        items:
          $ref: '#/definitions/RekognitionCompareFace'
        type: array
    type: object
  RekognitionCompareFacesParam:
    properties:
      QualityFilter:
        type: string
      SimilarityThreshold:
        type: number
      SourceImage:
        $ref: '#/definitions/ImageRef'
      TargetImage:
        $ref: '#/definitions/ImageRef'
    required:
      - SourceImage
      - TargetImage
    type: object
  RekognitionConfidenceValue:
    properties:
      Confidence:
        type: number
      Value:
        type: boolean
    type: object
  RekognitionFaceMatch:
    properties:
      Face:
        $ref: '#/definitions/RekognitionCompareFace'
      Similarity:
        type: number
    type: object
  RekognitionLandmark:
    properties:
      Type:
        type: string
      X:
        type: number
      'Y':
        type: number
    type: object
  RekognitionPose:
    properties:
      Pitch:
        type: number
      Roll:
        type: number
      Yaw:
        type: number
    type: object
  RekognitionQuality:
    properties:
      Brightness:
        type: number
      Sharpness:
        type: number
    type: object
  RekognitionSourceImageFace:
    properties:
      BoundingBox:
        $ref: '#/definitions/RekognitionBoundingBox'
      Confidence:
        type: number
    type: object
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
security:
  - BearerAuth: []
x-components: {}

